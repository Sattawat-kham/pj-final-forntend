[{"C:\\xampp\\htdocs\\pj-final-forntend\\src\\index.js":"1","C:\\xampp\\htdocs\\pj-final-forntend\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\pj-final-forntend\\src\\routes\\rootRoute.js":"3","C:\\xampp\\htdocs\\pj-final-forntend\\src\\routes\\privateRoute.js":"4","C:\\xampp\\htdocs\\pj-final-forntend\\src\\shared\\sweetalerts\\index.js":"5","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\main\\Main.js":"6","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\pages\\register\\Register.js":"7","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\pages\\login\\Login.js":"8","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\routes.js":"9","C:\\xampp\\htdocs\\pj-final-forntend\\src\\api\\index.js":"10","C:\\xampp\\htdocs\\pj-final-forntend\\src\\config\\index.js":"11","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\quizes\\Quizes.js":"12","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\home\\Home.js":"13","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\quizes\\ColorQuizes\\index.js":"14","C:\\xampp\\htdocs\\pj-final-forntend\\src\\config\\dev.js":"15","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\quizes\\ColorQuizes\\Color.js":"16","C:\\xampp\\htdocs\\pj-final-forntend\\src\\config\\prod.js":"17"},{"size":731,"mtime":1608703747094,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608702019801,"results":"20","hashOfConfig":"19"},{"size":3070,"mtime":1609229960090,"results":"21","hashOfConfig":"19"},{"size":1267,"mtime":1616671173487,"results":"22","hashOfConfig":"19"},{"size":890,"mtime":1608781282848,"results":"23","hashOfConfig":"19"},{"size":1463,"mtime":1609066929482,"results":"24","hashOfConfig":"19"},{"size":17337,"mtime":1616782899881,"results":"25","hashOfConfig":"19"},{"size":3724,"mtime":1617516951006,"results":"26","hashOfConfig":"19"},{"size":474,"mtime":1609125711827,"results":"27","hashOfConfig":"19"},{"size":2305,"mtime":1616671451779,"results":"28","hashOfConfig":"19"},{"size":174,"mtime":1616672824736,"results":"29","hashOfConfig":"19"},{"size":1883,"mtime":1609929123299,"results":"30","hashOfConfig":"19"},{"size":9498,"mtime":1617558668593,"results":"31","hashOfConfig":"19"},{"size":12980,"mtime":1611392903266,"results":"32","hashOfConfig":"19"},{"size":153,"mtime":1616581713741,"results":"33","hashOfConfig":"19"},{"size":942,"mtime":1609225298611,"results":"34","hashOfConfig":"19"},{"size":152,"mtime":1608713010903,"results":"35","hashOfConfig":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"dmpgwj",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q2as9g","C:\\xampp\\htdocs\\pj-final-forntend\\src\\index.js",[],["79","80"],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\routes\\rootRoute.js",[],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\routes\\privateRoute.js",["81"],"/* eslint-disable react/prop-types */\r\nimport React, { useEffect } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { errorCallBack } from '../shared/sweetalerts/index'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    useEffect(() => {\r\n        if (window.sessionStorage.getItem('isLogin') == 1) {\r\n            if (JSON.parse(window.sessionStorage.getItem('token')).expires_in < Date.now() / 1000) {\r\n                // console.log(\"หมดเวลาtoken\")\r\n                errorCallBack(\"Token หมดอายุกรุณาเข้าสู่ระบบใหม่อีกครั้ง\", \"หมดเวลาการเข้าสู่ระบบกรุณาทำการเข้าสู่ระบบใหม่อีกครั้ง!\")\r\n                handleLogout();\r\n            }\r\n        }\r\n    })\r\n\r\n    const handleLogout = () => {\r\n        this.destroy();\r\n        window.sessionStorage.clear();\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        window.sessionStorage.getItem('isLogin') === \"1\" ? (<Route {...rest} />) : (<Redirect to={{\r\n            pathname: process.env.PUBLIC_URL + '/register'\r\n        }} />)\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","C:\\xampp\\htdocs\\pj-final-forntend\\src\\shared\\sweetalerts\\index.js",[],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\main\\Main.js",[],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\pages\\register\\Register.js",["82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport logo_img from \"../../../assets/img/logo.png\";\r\nimport { Form, Input, Button, Radio, DatePicker, Select } from \"antd\";\r\nimport { RegisterService, LoginService } from \"../../../api/index\";\r\nimport moment from 'moment';\r\nimport {\r\n  showLoadingCallBack,\r\n  closeShowLoading,\r\n  errorCallBack,\r\n} from \"../../../shared/sweetalerts/index\";\r\n\r\nconst { Option } = Select;\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { span: 12, offset: 8 },\r\n};\r\n\r\nconst Register = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [listmajor, setlistmajor] = useState([\r\n    {\r\n      id: 0,\r\n      name: \"วิทยาการคอมพิวเตอร์\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"เทคโนโลยีสารสนเทศ\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"เทคโนโลยีมัลติมีเดีย\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"วิทยาศาสตร์การกีฬา\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"วิทยาศาสตร์สิ่งแวดล้อม\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"เทคโนโลยีวิศวกรรมโยธา\"\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"อิเล็กทรอนิกส์และคอมพิวเตอร์อุตสาหกรรม\"\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"เทคโนโลยีการผลิต\"\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"อาหารและโภชนาการ\"\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"วิทยาศาสตร์ทั่วไป (ค.บ. 4 ปี)\"\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"ฟิสิกส์ (ค.บ. 4 ปี)\"\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"คณิตศาสตร์ (ค.บ. 4 ปี)\"\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"เคมี (ค.บ. 4 ปี)\"\r\n    },\r\n    {\r\n      id: 13,\r\n      name: \"ชีววิทยา (ค.บ. 4 ปี)\"\r\n    },\r\n    {\r\n      id: 14,\r\n      name: \"สาขาอื่นๆ\"\r\n    },\r\n  ])\r\n\r\n  const [listf_work, setlistf_work] = useState([\r\n    {\r\n      id: 0,\r\n      name: \"รับจ้าง\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"ธุรกิจส่วนตัว\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"ค้าขาย\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"พนักงานบริษัท\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"ข้าราชการ\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"ทำสวน\"\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"อาชีพอื่นๆ\"\r\n    },\r\n  ])\r\n\r\n  const [listm_work, setlistm_work] = useState([\r\n    {\r\n      id: 0,\r\n      name: \"รับจ้าง\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"ธุรกิจส่วนตัว\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"ค้าขาย\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"พนักงานบริษัท\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"ข้าราชการ\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"แม่บ้าน\"\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"อาชีพอื่นๆ\"\r\n    },\r\n  ])\r\n\r\n  let [passwordConfirm, setPasswordConfirm] = useState(null);\r\n  let [password, setPassword] = useState(null);\r\n  const onFinish = async (val) => {\r\n\r\n    if (val.major <= 0.5) {\r\n      val.label = 1;\r\n      if (val.grade <= 2.485) {\r\n        val.label = 1;\r\n        if (val.sex <= 0.5) {\r\n          val.label = 0;\r\n        } else {\r\n          val.label = 1;\r\n          if (val.grade <= 1.92) {\r\n            val.label = 0;\r\n          } else {\r\n            val.label = 1;\r\n          }\r\n        }\r\n      } else {\r\n        val.label = 1;\r\n        if (val.morther_work <= 2.5) {\r\n          val.label = 1;\r\n          if (val.morther_work <= 1.5) {\r\n            val.label = 1;\r\n\r\n          } else {\r\n            val.label = 1;\r\n            if (val.father_work <= 2.5) {\r\n              val.label = 1;\r\n              if (val.grade <= 3.135) {\r\n                val.label = 0;\r\n              } else {\r\n                val.label = 1;\r\n              }\r\n            } else {\r\n              val.label = 1;\r\n            }\r\n          }\r\n        } else {\r\n          val.label = 1;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      val.label = 0;\r\n      if (val.school_type <= 1.5) {\r\n        val.label = 0;\r\n        if (val.major <= 7.5) {\r\n          val.label = 0;\r\n          if (val.income <= 5.5) {\r\n            val.label = 0;\r\n          } else {\r\n            val.label = 1;\r\n            if (val.sex <= 0.5) {\r\n              val.label = 0;\r\n              if (val.father_work <= 0.5) {\r\n                val.label = 1;\r\n              } else {\r\n                val.label = 0;\r\n              }\r\n            } else {\r\n              val.label = 1;\r\n            }\r\n          }\r\n        } else {\r\n          val.label = 1;\r\n          if (val.father_work <= 3.0) {\r\n            val.label = 1;\r\n          } else {\r\n            val.label = 0;\r\n          }\r\n        }\r\n      } else {\r\n        val.label = 0;\r\n      }\r\n    }\r\n\r\n    const index_major = listmajor.findIndex(e => e.id == val.major)\r\n    if (index_major != -1) {\r\n      val.major = listmajor[index_major].name\r\n    }\r\n\r\n    const indexm_work = listm_work.findIndex(e => e.id == val.morther_work)\r\n    if (indexm_work != -1) {\r\n      val.morther_work = listm_work[indexm_work].name\r\n    }\r\n\r\n    const indexf_work = listf_work.findIndex(e => e.id == val.father_work)\r\n    if (indexf_work != -1) {\r\n      val.father_work = listf_work[indexf_work].name\r\n    }\r\n\r\n    val.faculty = \"วิทยาศาสตร์\";\r\n\r\n    val.birth_date = `${moment(new Date(val.birthday._d)).format('YYYY-MM-DD')}`\r\n\r\n    /* บันทึก */\r\n    showLoadingCallBack();\r\n    const res = await RegisterService(val);\r\n    closeShowLoading();\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    errorCallBack(\"กรอกข้อมูลไม่ครบ\");\r\n  };\r\n\r\n  const configDatePicker = {\r\n    rules: [\r\n      { type: \"object\", required: true, message: \"Please select Birthday!\" },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"limiter\">\r\n        <div className=\"container-login100\">\r\n          <div className=\"wrap-login100\">\r\n            <h2 className=\"text-center\">\r\n              ระบบสมัครนักศึกษา\r\n            </h2>\r\n            <br />\r\n            <div className=\"logo-img\">\r\n              <img src={logo_img} />\r\n            </div>\r\n            <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              // initialValues={{\r\n              //   passwordConfirm: passwordConfirm,\r\n              //   password: password,\r\n              // }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <Form.Item\r\n                label=\"ชื่อจริง\"\r\n                name=\"name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณากรอกชื่อจริง\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"นามสกุล\"\r\n                name=\"subname\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณากรอกนามสกุล\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"บัตรประจำตัวประชาชน\"\r\n                name=\"id_card\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณากรอกบัตรประจำตัวประชาชน\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input showCount maxLength={13} />\r\n              </Form.Item>\r\n\r\n              <Form.Item name=\"birthday\" label=\"วันเกิด\" {...configDatePicker}>\r\n                <DatePicker />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"E-mail\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    type: 'email',\r\n                    required: true,\r\n                    message: \"กรุณากรอกอีเมล\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"ที่อยู่\"\r\n                name=\"address\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณากรอกที่อยู่\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.TextArea showCount maxLength={255} />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"domicile\"\r\n                label=\"ภูมิลำเนา\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณาเลือกภูมิลำเนา\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Radio.Group>\r\n                  <Radio value=\"0\">ภาคกลาง</Radio>\r\n                  <Radio value=\"1\">ภาคตะวันออกเฉียงเหนือ</Radio>\r\n                  <Radio value=\"2\">ภาคเหนือ</Radio>\r\n                  <Radio value=\"3\">ภาคใต้</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"เกรดเฉลี่ย\"\r\n                name=\"grade\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณากรอกเกรดเฉลี่ย\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"number\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"สาขาที่ต้องการเข้าศึกษาต่อ\"\r\n                name=\"major\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'กรุณาเลือกสาขาวิชา'\r\n                  }\r\n                ]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"สาขา\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  size=\"large\"\r\n                >\r\n                  {listmajor.map(e => (<Option value={e.id}>{e.name}</Option>))}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"sex\"\r\n                label=\"เพศ\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณาเลือกเพศ\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Radio.Group>\r\n                  <Radio value=\"1\">ผู้ชาย</Radio>\r\n                  <Radio value=\"0\">ผู้หญิง</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"ชื่อโรงเรียน\"\r\n                name=\"school_name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณากรอกชื่อโรงเรียน\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"school_type\"\r\n                label=\"ประเภทโรงเรียน\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณาเลือกประเภทโรงเรียน\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Radio.Group>\r\n                  <Radio value=\"1\">มัธยมศึกษาตอนปลาย</Radio>\r\n                  <Radio value=\"2\">ประกาศนียบัตรวิชาชีพ (ปวช.)</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"ชื่อ-นามสกุล บิดา\"\r\n                name=\"father_name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณากรอกชื่อ-นามสกุลบิดา\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"อาชีพบิดา\"\r\n                name=\"father_work\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'กรุณาเลือกอาชีพบิดา'\r\n                  }\r\n                ]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"อาชีพบิดา\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  size=\"large\"\r\n                >\r\n                  {listf_work.map(e => (<Option value={e.id}>{e.name}</Option>))}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"ชื่อ-นามสกุล มารดา\"\r\n                name=\"morther_name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณากรอกชื่อ-นามสกุลชื่อมารดา\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"อาชีพมารดา\"\r\n                name=\"morther_work\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'กรุณาเลือกอาชีพมารดา'\r\n                  }\r\n                ]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"อาชีพมารดา\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  size=\"large\"\r\n                >\r\n                  {listm_work.map(e => (<Option value={e.id}>{e.name}</Option>))}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"income\"\r\n                label=\"รายได้ของครอบครัว\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"กรุณาเลือกรายได้ของครอบครัว\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Radio.Group>\r\n                  <Radio value=\"1\">น้อยกว่าเท่ากับ 10,000</Radio>\r\n                  <Radio value=\"2\">10,001-20,000</Radio>\r\n                  <Radio value=\"3\">20,001-30,000 </Radio>\r\n                  <Radio value=\"4\">30,001-40,000</Radio>\r\n                  <Radio value=\"5\">40,001-50,000</Radio>\r\n                  <Radio value=\"6\">มากกว่าเท่ากับ 50,001</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n\r\n\r\n\r\n              <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  สมัคร\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;\r\n                {/* <Link to=\"/login\">\r\n                  <Button htmlType=\"button\">ยกเลิก</Button>\r\n                </Link> */}\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <style dangerouslySetInnerHTML={{ __html: \"\\n.wrap-login100 {\\n    width: 870px;\\n    background: #fff;\\n    border-radius: 10px;\\n    position: relative;\\n    padding: 90px;\\n    border-style: solid;\\n}\\n\" }} />\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\pages\\login\\Login.js",["100","101"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport logo_img from \"../../../assets/img/logo.png\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { LoginService } from \"../../../api/index\";\r\nimport config from \"../../../config/index\";\r\nimport {\r\n  showLoadingCallBack,\r\n  closeShowLoading,\r\n  errorCallBack,\r\n} from \"../../../shared/sweetalerts/index\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { span: 12, offset: 8 },\r\n};\r\n\r\nfunction Login() {\r\n\r\n  const [username, setUsername] = useState(\r\n    config.CONFIG_ENV === \"development\" ? \"Sattawat\" : \"\"\r\n  );\r\n  const [password, setPassword] = useState(\r\n    config.CONFIG_ENV === \"development\" ? \"1234\" : \"\"\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const onFinish = (values) => {\r\n    showLoadingCallBack();\r\n    // console.log(\"Success:\", values);\r\n    LoginService({\r\n      username: values.username,\r\n      password: values.password,\r\n    }).then((res) => {\r\n      console.log(\"res :>> \", res);\r\n      setTimeout(() => {\r\n        closeShowLoading();\r\n        window.sessionStorage.setItem(\"token\", JSON.stringify(res.data));\r\n        window.sessionStorage.setItem(\"isLogin\", 1);\r\n        history.push(\"/\");\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n    errorCallBack(\"กรอกข้อมูลไม่ครบ\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"limiter\">\r\n        <div className=\"container-login100\">\r\n          <div className=\"wrap-login100\">\r\n            <h2 className=\"text-center\">\r\n              ระบบสมัครนักศึกษาใหม่\r\n            </h2>\r\n            <br />\r\n            <div className=\"logo-img\">\r\n              <img src={logo_img} />\r\n            </div>\r\n            <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              initialValues={{\r\n                username: username,\r\n                password: password,\r\n              }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                onChange={(e) => {\r\n                  setUsername(e.target.value);\r\n                }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your username!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your password!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  เข้าสู่ระบบ\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;\r\n                {/* <Link to=\"/register\">\r\n                  <Button htmlType=\"button\" >\r\n                    ลงทะเบียน\r\n                  </Button>\r\n                </Link> */}\r\n              </Form.Item>\r\n\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\routes.js",[],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\api\\index.js",[],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\config\\index.js",[],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\quizes\\Quizes.js",["102"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GetQuizsDetail } from \"../../api/index\";\r\nimport { showLoadingCallBack, closeShowLoading, errorCallBack } from \"../../shared/sweetalerts/index\";\r\n\r\n\r\n\r\nfunction Quizes() {\r\n\r\n    const history = useHistory();\r\n    const [detail, setDetail] = useState(null);\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            showLoadingCallBack()\r\n            const res = await GetQuizsDetail()\r\n            setDetail(res.data.items)\r\n            closeShowLoading()\r\n        } catch (error) {\r\n            closeShowLoading()\r\n            console.log('error :>> ', error.response.data.error);\r\n            const log = error.response.data.error ? error.response.data.error.message : undefined;\r\n            errorCallBack(\"ข้อความจากระบบ\", log);\r\n        }\r\n    }, [])\r\n\r\n    const start = () => {\r\n        history.push(\"/colorQuizes\");\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"limiter\">\r\n                <div className=\"container-login100\">\r\n                    <div className=\"wrap-login100-detail\">\r\n                        <div className=\"body-detail\" id=\"style-3\" dangerouslySetInnerHTML={{\r\n                            __html: detail\r\n                        }} />\r\n                        <div className=\"d-grid gap-2 col-sm-6 col-md-6 col-xl-3 pt-3 mx-auto\">\r\n                            <button className=\"btn btn-primary\" type=\"button\" onClick={start}>ต่อไป</button>\r\n                            <button className=\"btn btn-secondary\" type=\"button\" onClick={cancel}>ยกเลิก</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Quizes\r\n","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\home\\Home.js",["103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Table, Select } from \"antd\";\r\nimport logo_img from \"../../assets/img/logo.png\";\r\nimport { Getregister } from \"../../api\";\r\nimport { closeShowLoading, errorCallBack, showLoadingCallBack } from '../../shared/sweetalerts';\r\n\r\nfunction Home() {\r\n\r\n    const { Option } = Select;\r\n\r\n    const [list, setList] = useState([]);\r\n    const [listAll, setListAll] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            showLoadingCallBack()\r\n            const res = await Getregister()\r\n            res.data.forEach((e, index) => {\r\n                e.fullname = e.name + \" \" + e.subname;\r\n            });\r\n\r\n            console.log(`res.data`, res.data)\r\n            setList(res.data)\r\n            setListAll(res.data)\r\n            closeShowLoading()\r\n        } catch (error) {\r\n            closeShowLoading()\r\n            // console.log('error :>> ', error.response.data.error);\r\n            // const log = error.response.data.error ? error.response.data.error.message : undefined;\r\n            errorCallBack(\"ข้อความจากระบบ\", \"มีบางอย่างผิดพลาด\");\r\n        }\r\n    }, [])\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: () => \"ชื่อ\",\r\n            dataIndex: \"fullname\",\r\n            key: \"fullname\",\r\n            width: 80,\r\n            sorter: (a, b) => a.fullname.localeCompare(b.fullname),\r\n        },\r\n        {\r\n            title: () => \"เพศ\",\r\n            dataIndex: \"sex\",\r\n            key: \"sex\",\r\n            width: 60,\r\n            sorter: (a, b) => a.order - b.order,\r\n            render: (a, b) => a == 1 ? \"ชาย\" : \"หญิง\",\r\n        },\r\n        {\r\n            title: () => \"สาขาที่ต้องการศึกษาต่อ\",\r\n            dataIndex: \"major\",\r\n            key: \"major\",\r\n            width: 60,\r\n            sorter: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n        {\r\n            title: () => \"คาดการณ์สถานะ\",\r\n            dataIndex: \"label\",\r\n            key: \"label\",\r\n            width: 60,\r\n            sorter: (a, b) => a.order - b.order,\r\n            render: (a, b) => a == 1 ? \"มีโอกาศเข้าศึกษาสูง\" : \"มีโอกาศเข้าศึกษาต่ำ\",\r\n            render(text, record) {\r\n                let text_show = text == 1 ? \"มีโอกาศเข้าศึกษาสูง\" : \"มีโอกาศเข้าศึกษาต่ำ\";\r\n                return {\r\n                    props: {\r\n                        style: { color: text == 1 ? \"green\" : \"red\" }\r\n                    },\r\n                    children: <div>{text_show}</div>\r\n                };\r\n            }\r\n        },\r\n        // {\r\n        //     title: () => \"ข้อมูลผู้สมัคร\",\r\n        //     dataIndex: \"aa\",\r\n        //     key: \"aa\",\r\n        //     width: 40,\r\n        //     sorter: (a, b) => a.order - b.order,\r\n        // },\r\n\r\n\r\n    ];\r\n\r\n    const startQuizes = () => {\r\n        history.push(\"/quizes\");\r\n    }\r\n\r\n    const logout = () => {\r\n        sessionStorage.removeItem(\"token\");\r\n        sessionStorage.removeItem(\"isLogin\");\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    function fillter_major(value) {\r\n        let new_list = [];\r\n        let major = value;\r\n        if (major == \"ทั้งหมด\") {\r\n            new_list = listAll;\r\n        } else {\r\n\r\n            listAll.forEach((e, index) => {\r\n                if (e.major == major) {\r\n                    new_list.push(e);\r\n                }\r\n            });\r\n        }\r\n        setList(new_list);\r\n    }\r\n\r\n    function fillter_label(value) {\r\n        let new_list = [];\r\n        let label = value;\r\n        if (label == \"ทั้งหมด\") {\r\n            new_list = listAll;\r\n        } else {\r\n\r\n            listAll.forEach((e, index) => {\r\n                if (e.label == label) {\r\n                    new_list.push(e);\r\n                }\r\n            });\r\n        }\r\n        setList(new_list);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"limiter\">\r\n                <div className=\"container-login100\">\r\n                    <div className=\"wrap-login100\">\r\n                        <h2 className=\"text-center\">\r\n                            รายชื่อผู้สมัคร\r\n                        </h2>\r\n                        <br />\r\n                        <label for=\"major_fillter\">สาขาวิชา :</label>&nbsp;&nbsp;\r\n                        <Select name=\"major_fillter\" id=\"major_fillter\" defaultValue=\"ทั้งหมด\" style={{ width: \"35%\" }} onChange={fillter_major}\r\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\r\n                            <Option value=\"ทั้งหมด\">ทั้งหมด</Option>\r\n                            <Option value=\"วิทยาการคอมพิวเตอร์\">วิทยาการคอมพิวเตอร์</Option>                       \r\n                            <Option value=\"เทคโนโลยีสารสนเทศ\">เทคโนโลยีสารสนเทศ</Option>\r\n                            <Option value=\"เทคโนโลยีมัลติมีเดีย\">เทคโนโลยีมัลติมีเดีย</Option>\r\n                            <Option value=\"วิทยาศาสตร์การกีฬา\">วิทยาศาสตร์การกีฬา</Option>\r\n                            <Option value=\"วิทยาศาสตร์สิ่งแวดล้อม\">วิทยาศาสตร์สิ่งแวดล้อม</Option>\r\n                            <Option value=\"เทคโนโลยีวิศวกรรมโยธา\">เทคโนโลยีวิศวกรรมโยธา</Option>\r\n                            <Option value=\"อิเล็กทรอนิกส์และคอมพิวเตอร์อุตสาหกรรม\">อิเล็กทรอนิกส์และคอมพิวเตอร์อุตสาหกรรม</Option>\r\n                            <Option value=\"เทคโนโลยีการผลิต\">เทคโนโลยีการผลิต</Option>\r\n                            <Option value=\"อาหารและโภชนาการ\">อาหารและโภชนาการ</Option>\r\n                            <Option value=\"วิทยาศาสตร์ทั่วไป (ค.บ. 4 ปี)\">วิทยาศาสตร์ทั่วไป (ค.บ. 4 ปี)</Option>\r\n                            <Option value=\"ฟิสิกส์ (ค.บ. 4 ปี)\">ฟิสิกส์ (ค.บ. 4 ปี)</Option>\r\n                            <Option value=\"คณิตศาสตร์ (ค.บ. 4 ปี)\">คณิตศาสตร์ (ค.บ. 4 ปี)</Option>\r\n                            <Option value=\"เคมี (ค.บ. 4 ปี)\">เคมี (ค.บ. 4 ปี)</Option>\r\n                            <Option value=\"ชีววิทยา (ค.บ. 4 ปี)\">ชีววิทยา (ค.บ. 4 ปี)</Option>\r\n                            <Option value=\"สาขาอื่นๆ\">สาขาอื่นๆ</Option>\r\n                        </Select>&nbsp;&nbsp;\r\n                        <label for=\"label_fillter\">คาดการณ์สถานะ :</label>&nbsp;&nbsp;\r\n                        <Select name=\"label_fillter\" id=\"label_fillter\" defaultValue=\"ทั้งหมด\" style={{ width: \"25%\" }} onChange={fillter_label}\r\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\r\n                            <Option value=\"ทั้งหมด\">ทั้งหมด</Option>\r\n                            <Option value=\"1\">มีโอกาศเข้าศึกษาสูง</Option>\r\n                            <Option value=\"0\">มีโอกาศเข้าศึกษาต่ำ</Option>\r\n                        </Select>\r\n                        <br /><br />\r\n                        <Table\r\n                            columns={columns}\r\n                            dataSource={list}\r\n                            bordered\r\n                            size=\"middle\"\r\n                            scroll={{ x: \"100%\", y: \"100%\" }}\r\n                            rowKey={(record) => record.id}\r\n                            loading={loading}\r\n                        />\r\n                        <br />\r\n                        <div className=\"d-grid gap-2 col-10 mx-auto\">\r\n                            <button className=\"btn btn-secondary\" type=\"button\" onClick={logout}>ออกจากระบบ</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <style dangerouslySetInnerHTML={{ __html: \"\\n.wrap-login100 {\\n    width: 1280px;\\n    background: #fff;\\n    border-radius: 10px;\\n    position: relative;\\n    padding: 90px;\\n    border-style: solid;\\n}\\n\" }} />\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\quizes\\ColorQuizes\\index.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GetQuizs, AddQuizs } from \"../../../api/index\";\r\nimport { showLoadingCallBack, closeShowLoading, errorCallBack } from \"../../../shared/sweetalerts/index\";\r\n\r\nimport Color from './Color';\r\n\r\n\r\nconst Result = ({ red, green, blue }) => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <div className=\"limiter\">\r\n                <div className=\"container-login100\">\r\n                    <div className=\"wrap-login100\">\r\n                        <h3 className=\"text-center pb-3\"> ผลลัพธ์จากการทดสอบ </h3>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 col-xs-12\">\r\n                                <p style={{ marginBottom: 0 }}><li>Protanopia(สีแดง) : {red || 0}/10</li></p>\r\n                            </div>\r\n                            <div className=\"col-md-4 col-xs-12\">\r\n                                <h6 className=\"text-center pb-3\">\r\n                                    - {red > 5 ? \"ปกติ\" : red == 5 ? \"มีความเสี่ยง\" : \"ผิดปกติ\"} -\r\n                                </h6>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 col-xs-12\">\r\n                                <p style={{ marginBottom: 0 }}><li>Deuteranopia(สีเขียว) : {green || 0}/10</li></p>\r\n                            </div>\r\n                            <div className=\"col-md-4 col-xs-12\">\r\n                                <h6 className=\"text-center pb-3\">\r\n                                    - {green > 5 ? \"ปกติ\" : green == 5 ? \"มีความเสี่ยง\" : \"ผิดปกติ\"} -\r\n                                </h6>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 col-xs-12\">\r\n                                <p style={{ marginBottom: 0 }}><li>Tritanopia(สีน้ำเงิน) : {blue || 0}/10</li></p>\r\n                            </div>\r\n                            <div className=\"col-md-4 col-xs-12\">\r\n                                <h6 className=\"text-center pb-3\">\r\n                                    - {blue > 5 ? \"ปกติ\" : blue == 5 ? \"มีความเสี่ยง\" : \"ผิดปกติ\"} -\r\n                                </h6>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* {\r\n                            (red > 5 && green > 5 && blue > 5) ?\r\n                                <>\r\n                                    <h5 className=\"text-center pt-3\">Nomal</h5>\r\n                                    <h6 className=\"text-center\">(คุณไม่มีความบกพร่อง)</h6>\r\n                                </>\r\n\r\n                                :\r\n\r\n                                <>\r\n                                    <h5 className=\"text-center pt-3\">คุณมีความบกพร่อง</h5>\r\n                                    {red < 5 ? <h6 className=\"text-center\">Protanopia(สีแดง)</h6> : null}\r\n                                    {green < 5 ? <h6 className=\"text-center\">Deuteranopia(สีเขียว)</h6> : null}\r\n                                    {blue < 5 ? <h6 className=\"text-center\">Tritanopia(สีน้ำเงิน)</h6> : null}\r\n                                </>\r\n                        }\r\n                        */}\r\n\r\n\r\n\r\n\r\n                        <div className=\"d-grid gap-2 col-sm-6 col-md-6 col-xl-6 pt-3 mx-auto btn-footer\" >\r\n                            <button className=\"btn btn-black\" type=\"button\" onClick={() => { history.push(\"/\"); }}>กลับหน้าแรก</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ColorQuizes() {\r\n\r\n    const [colorRed, setColorRed] = useState(null);\r\n    const [colorGreen, setColorGreen] = useState(null);\r\n    const [colorBlue, setColorBlue] = useState(null);\r\n    const [modelSave, setModelSave] = useState({\r\n        \"scheme_r_1\": null,\r\n        \"scheme_r_2\": null,\r\n        \"scheme_r_3\": null,\r\n        \"scheme_r_4\": null,\r\n        \"scheme_r_5\": null,\r\n        \"scheme_r_6\": null,\r\n        \"scheme_r_7\": null,\r\n        \"scheme_r_8\": null,\r\n        \"scheme_r_9\": null,\r\n        \"scheme_r_10\": null,\r\n\r\n        \"scheme_g_1\": null,\r\n        \"scheme_g_2\": null,\r\n        \"scheme_g_3\": null,\r\n        \"scheme_g_4\": null,\r\n        \"scheme_g_5\": null,\r\n        \"scheme_g_6\": null,\r\n        \"scheme_g_7\": null,\r\n        \"scheme_g_8\": null,\r\n        \"scheme_g_9\": null,\r\n        \"scheme_g_10\": null,\r\n\r\n        \"scheme_b_1\": null,\r\n        \"scheme_b_2\": null,\r\n        \"scheme_b_3\": null,\r\n        \"scheme_b_4\": null,\r\n        \"scheme_b_5\": null,\r\n        \"scheme_b_6\": null,\r\n        \"scheme_b_7\": null,\r\n        \"scheme_b_8\": null,\r\n        \"scheme_b_9\": null,\r\n        \"scheme_b_10\": null\r\n    });\r\n\r\n    const [resRed, setResRed] = useState(null)\r\n    const [resGreen, setResGreen] = useState(null)\r\n    const [resBlue, setResBlue] = useState(null)\r\n\r\n\r\n    const [colorPage, setColorPage] = useState({\r\n        type: \"red\",\r\n        page: \"1\",\r\n    });\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            showLoadingCallBack()\r\n            const res = await GetQuizs()\r\n            for (let x = 1; x <= 3; x++) {\r\n                let type = (x === 1) ? \"red\" : (x === 2) ? \"green\" : (x === 3) ? \"blue\" : null;\r\n                for (let y = 1; y <= 10; y++) {\r\n                    shuffle(res.data.items[type][`color_${type}_${y}`])\r\n                }\r\n            }\r\n\r\n            setColorRed(res.data.items.red)\r\n            setColorGreen(res.data.items.green)\r\n            setColorBlue(res.data.items.blue)\r\n            closeShowLoading()\r\n        } catch (error) {\r\n            closeShowLoading()\r\n            console.log('error :>> ', error.response.data.error);\r\n            const log = error.response.data.error ? error.response.data.error.message : undefined;\r\n            errorCallBack(\"ข้อความจากระบบ\", log);\r\n        }\r\n    }, [])\r\n\r\n    const PageColor = (props) => {\r\n\r\n        switch (props.value) {\r\n            case \"red\":\r\n                return (colorRed ? <Color color={colorRed} type={colorPage.type} page={colorPage.page} /> : null);\r\n            case \"green\":\r\n                return (colorGreen ? <Color color={colorGreen} type={colorPage.type} page={colorPage.page} /> : null);\r\n            case \"blue\":\r\n                return (colorBlue ? <Color color={colorBlue} type={colorPage.type} page={colorPage.page} /> : null);\r\n            default:\r\n                return (\r\n                    <> </>\r\n                );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const click = async (value) => {\r\n        try {\r\n            let type = (colorPage.type == \"red\") ? \"r\" : (colorPage.type == \"green\") ? \"g\" : (colorPage.type == \"blue\") ? \"b\" : null;\r\n            if (colorPage.page == \"11\" && colorPage.type == \"red\") {\r\n                setColorPage({\r\n                    type: \"green\",\r\n                    page: \"1\",\r\n                })\r\n            } else if (colorPage.page == \"11\" && colorPage.type == \"green\") {\r\n                setColorPage({\r\n                    type: \"blue\",\r\n                    page: \"1\",\r\n                })\r\n            } else if (colorPage.page == \"10\" && colorPage.type == \"blue\") {\r\n                setModelSave({ ...modelSave, [`scheme_${type}_${colorPage.page}`]: value })\r\n                modelSave[`scheme_${type}_${colorPage.page}`] = value;\r\n                showLoadingCallBack()\r\n                await AddQuizs(modelSave);\r\n                closeShowLoading()\r\n\r\n                // console.log('modelSave :>> ', modelSave);\r\n\r\n                let list_r = [], list_g = [], list_b = []\r\n                for (let x = 1; x <= 3; x++) {\r\n                    let type = (x === 1) ? \"r\" : (x === 2) ? \"g\" : (x === 3) ? \"b\" : null;\r\n                    for (let y = 1; y <= 10; y++) {\r\n                        if (x === 1) {\r\n                            list_r.push(modelSave[`scheme_${type}_${y}`])\r\n                        } else if (x === 2) {\r\n                            list_g.push(modelSave[`scheme_${type}_${y}`])\r\n                        } else if (x === 3) {\r\n                            list_b.push(modelSave[`scheme_${type}_${y}`])\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                setResRed(list_r.reduce((acc, val) => acc + val, 0).toFixed(2))\r\n                setResGreen(list_g.reduce((acc, val) => acc + val, 0).toFixed(2))\r\n                setResBlue(list_b.reduce((acc, val) => acc + val, 0).toFixed(2))\r\n\r\n                setColorPage({\r\n                    type: \"result\",\r\n                    page: \"1\",\r\n                })\r\n\r\n            } else {\r\n\r\n                await setModelSave({ ...modelSave, [`scheme_${type}_${colorPage.page}`]: value })\r\n                let page = (Number(colorPage.page) + 1).toString()\r\n                setColorPage({ ...colorPage, page })\r\n            }\r\n        } catch (error) {\r\n            closeShowLoading()\r\n            // console.log('error :>> ', error.response.data.error);\r\n            // const log = error.response.data.error ? error.response.data.error.message : undefined;\r\n            // errorCallBack(\"ข้อความจากระบบ\", log);\r\n            errorCallBack(\"ข้อความจากระบบ\", error.message);\r\n        }\r\n    }\r\n\r\n    function shuffle(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            let temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {colorPage.type != \"result\" ?\r\n                <>\r\n                    <div className=\"limiter\">\r\n                        <div className=\"container-login100\">\r\n                            <div className=\"wrap-login100\">\r\n                                {colorPage.page != \"11\" ?\r\n                                    <>\r\n                                        <h4 className=\"text-center pb-1 text-white\"> แบบทดสอบชุดที่ {colorPage.type == \"red\" ? \"1\" : colorPage.type == \"green\" ? \"2\" : colorPage.type == \"blue\" ? \"3\" : \"\"}</h4>\r\n                                        <h4 className=\"text-center pb-1 text-white\"> คุณเห็นสีเหมือนกันทั้งหมดกี่คู่ ?</h4>\r\n                                        <h5 className=\"text-center pb-3 text-white\"> ข้อที่.{colorPage.page}</h5>\r\n\r\n                                        {colorPage ? <PageColor value={colorPage.type} /> : null}\r\n                                        <div className=\"d-grid gap-2 col-sm-6 col-md-6 col-xl-6 pt-3 mx-auto btn-footer\" >\r\n                                            <button className=\"btn btn-lg btn-black\" type=\"button\" onClick={() => click(0.67)}>ก. เหมือนกันทั้งหมด 1 คู่</button>\r\n                                            <span className=\"pt-2\" />\r\n                                            <button className=\"btn btn-lg btn-black\" type=\"button\" onClick={() => click(0.33)}>ข. เหมือนกันทั้งหมด 2 คู่</button>\r\n                                            <span className=\"pt-2\" />\r\n                                            <button className=\"btn btn-lg btn-black\" type=\"button\" onClick={() => click(0)}>ค. เหมือนกันทั้งหมด</button>\r\n                                            <span className=\"pt-2\" />\r\n                                            <button className=\"btn btn-lg btn-black\" type=\"button\" onClick={() => click(1)}>ง. แตกต่างกันทั้งหมด</button>\r\n                                        </div>\r\n                                    </>\r\n                                    : <button className=\"btn btn-link text-white\" type=\"button\" onClick={() => click(null)}>กดเพื่อไปแบบทดสอบต่อไป</button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <style dangerouslySetInnerHTML={{ __html: \" .btn-footer .btn {font-size: 17px;} body {background-image: none !important;background-color: #7c7c7c !important;}.wrap-login100 { background: #7c7c7c !important; border-style: none }\\n\" }} />\r\n                </> : <Result red={resRed} green={resGreen} blue={resBlue} />}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ColorQuizes\r\n","C:\\xampp\\htdocs\\pj-final-forntend\\src\\config\\dev.js",[],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\views\\quizes\\ColorQuizes\\Color.js",[],["134","135"],"C:\\xampp\\htdocs\\pj-final-forntend\\src\\config\\prod.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":9,"column":54,"nodeType":"142","messageId":"143","endLine":9,"endColumn":56},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"148","line":5,"column":27,"nodeType":"146","messageId":"147","endLine":5,"endColumn":39},{"ruleId":"144","severity":1,"message":"149","line":28,"column":9,"nodeType":"146","messageId":"147","endLine":28,"endColumn":16},{"ruleId":"144","severity":1,"message":"150","line":30,"column":21,"nodeType":"146","messageId":"147","endLine":30,"endColumn":33},{"ruleId":"144","severity":1,"message":"151","line":93,"column":22,"nodeType":"146","messageId":"147","endLine":93,"endColumn":35},{"ruleId":"144","severity":1,"message":"152","line":124,"column":22,"nodeType":"146","messageId":"147","endLine":124,"endColumn":35},{"ruleId":"144","severity":1,"message":"153","line":155,"column":8,"nodeType":"146","messageId":"147","endLine":155,"endColumn":23},{"ruleId":"144","severity":1,"message":"154","line":155,"column":25,"nodeType":"146","messageId":"147","endLine":155,"endColumn":43},{"ruleId":"144","severity":1,"message":"155","line":156,"column":8,"nodeType":"146","messageId":"147","endLine":156,"endColumn":16},{"ruleId":"144","severity":1,"message":"156","line":156,"column":18,"nodeType":"146","messageId":"147","endLine":156,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":232,"column":55,"nodeType":"142","messageId":"143","endLine":232,"endColumn":57},{"ruleId":"140","severity":1,"message":"157","line":233,"column":21,"nodeType":"142","messageId":"143","endLine":233,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":237,"column":56,"nodeType":"142","messageId":"143","endLine":237,"endColumn":58},{"ruleId":"140","severity":1,"message":"157","line":238,"column":21,"nodeType":"142","messageId":"143","endLine":238,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":242,"column":56,"nodeType":"142","messageId":"143","endLine":242,"endColumn":58},{"ruleId":"140","severity":1,"message":"157","line":243,"column":21,"nodeType":"142","messageId":"143","endLine":243,"endColumn":23},{"ruleId":"144","severity":1,"message":"158","line":253,"column":11,"nodeType":"146","messageId":"147","endLine":253,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":277,"column":15,"nodeType":"161","endLine":277,"endColumn":37},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":69,"column":15,"nodeType":"161","endLine":69,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":14,"column":15,"nodeType":"164","endLine":26,"endColumn":6},{"ruleId":"144","severity":1,"message":"165","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":16},{"ruleId":"144","severity":1,"message":"166","line":14,"column":21,"nodeType":"146","messageId":"147","endLine":14,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":17,"column":15,"nodeType":"164","endLine":35,"endColumn":6},{"ruleId":"140","severity":1,"message":"141","line":52,"column":33,"nodeType":"142","messageId":"143","endLine":52,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":67,"column":33,"nodeType":"142","messageId":"143","endLine":67,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":68,"column":13,"nodeType":"169","messageId":"143","endLine":68,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":69,"column":38,"nodeType":"142","messageId":"143","endLine":69,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":72,"column":46,"nodeType":"142","messageId":"143","endLine":72,"endColumn":48},{"ruleId":"144","severity":1,"message":"170","line":89,"column":11,"nodeType":"146","messageId":"147","endLine":89,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":102,"column":19,"nodeType":"142","messageId":"143","endLine":102,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":107,"column":29,"nodeType":"142","messageId":"143","endLine":107,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":118,"column":19,"nodeType":"142","messageId":"143","endLine":118,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":123,"column":29,"nodeType":"142","messageId":"143","endLine":123,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":24,"column":63,"nodeType":"142","messageId":"143","endLine":24,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":34,"column":67,"nodeType":"142","messageId":"143","endLine":34,"endColumn":69},{"ruleId":"140","severity":1,"message":"141","line":44,"column":65,"nodeType":"142","messageId":"143","endLine":44,"endColumn":67},{"ruleId":"162","severity":1,"message":"163","line":132,"column":15,"nodeType":"164","endLine":153,"endColumn":6},{"ruleId":"140","severity":1,"message":"141","line":175,"column":40,"nodeType":"142","messageId":"143","endLine":175,"endColumn":42},{"ruleId":"140","severity":1,"message":"141","line":175,"column":74,"nodeType":"142","messageId":"143","endLine":175,"endColumn":76},{"ruleId":"140","severity":1,"message":"141","line":175,"column":110,"nodeType":"142","messageId":"143","endLine":175,"endColumn":112},{"ruleId":"140","severity":1,"message":"141","line":176,"column":32,"nodeType":"142","messageId":"143","endLine":176,"endColumn":34},{"ruleId":"140","severity":1,"message":"141","line":176,"column":58,"nodeType":"142","messageId":"143","endLine":176,"endColumn":60},{"ruleId":"140","severity":1,"message":"141","line":181,"column":39,"nodeType":"142","messageId":"143","endLine":181,"endColumn":41},{"ruleId":"140","severity":1,"message":"141","line":181,"column":65,"nodeType":"142","messageId":"143","endLine":181,"endColumn":67},{"ruleId":"140","severity":1,"message":"141","line":186,"column":39,"nodeType":"142","messageId":"143","endLine":186,"endColumn":41},{"ruleId":"140","severity":1,"message":"141","line":186,"column":65,"nodeType":"142","messageId":"143","endLine":186,"endColumn":67},{"ruleId":"140","severity":1,"message":"157","line":245,"column":29,"nodeType":"142","messageId":"143","endLine":245,"endColumn":31},{"ruleId":"140","severity":1,"message":"157","line":250,"column":49,"nodeType":"142","messageId":"143","endLine":250,"endColumn":51},{"ruleId":"140","severity":1,"message":"141","line":252,"column":117,"nodeType":"142","messageId":"143","endLine":252,"endColumn":119},{"ruleId":"140","severity":1,"message":"141","line":252,"column":149,"nodeType":"142","messageId":"143","endLine":252,"endColumn":151},{"ruleId":"140","severity":1,"message":"141","line":252,"column":183,"nodeType":"142","messageId":"143","endLine":252,"endColumn":185},{"ruleId":"136","replacedBy":"171"},{"ruleId":"138","replacedBy":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'LoginService' is defined but never used.","'history' is assigned a value but never used.","'setlistmajor' is assigned a value but never used.","'setlistf_work' is assigned a value but never used.","'setlistm_work' is assigned a value but never used.","'passwordConfirm' is assigned a value but never used.","'setPasswordConfirm' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'logo_img' is defined but never used.","'setLoading' is assigned a value but never used.","no-dupe-keys","Duplicate key 'render'.","ObjectExpression","'startQuizes' is assigned a value but never used.",["173"],["174"],"no-global-assign","no-unsafe-negation"]